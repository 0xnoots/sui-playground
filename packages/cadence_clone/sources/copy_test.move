module sui_playground::copy_benchmark {
    use std::vector;

    const BIG_VECTOR: vector<u8> = vector[133, 89, 189, 181, 118, 33, 78, 167, 37, 215, 82, 28, 23, 114, 79, 114, 169, 182, 173, 100, 111, 168, 252, 191, 119, 192, 1, 238, 246, 230, 143, 157, 128, 105, 69, 68, 207, 135, 84, 69, 173, 58, 72, 70, 144, 83, 255, 1, 93, 227, 235, 73, 63, 115, 70, 125, 36, 71, 248, 251, 61, 10, 129, 23, 90, 166, 32, 167, 148, 129, 239, 70, 19, 238, 169, 183, 10, 209, 190, 141, 234, 184, 16, 70, 169, 97, 42, 82, 244, 208, 8, 249, 127, 46, 241, 70, 184, 146, 21, 128, 101, 124, 105, 20, 70, 245, 208, 162, 140, 131, 5, 108, 71, 13, 206, 250, 13, 245, 210, 117, 59, 19, 183, 68, 224, 14, 102, 60, 10, 190, 124, 3, 200, 120, 84, 232, 30, 34, 50, 145, 230, 42, 186, 212, 23, 107, 109, 242, 255, 126, 161, 152, 219, 100, 169, 193, 31, 162, 190, 137, 45, 83, 46, 232, 3, 194, 123, 33, 65, 167, 2, 210, 204, 35, 196, 41, 189, 103, 30, 134, 104, 52, 22, 158, 148, 84, 86, 27, 219, 252, 128, 115, 155, 188, 38, 159, 214, 215, 181, 240, 126, 75, 205, 117, 36, 162, 92, 2, 162, 76, 37, 244, 198, 137, 137, 230, 192, 86, 234, 180, 146, 173, 131, 38, 147, 250, 29, 107, 181, 229, 77, 218, 216, 155, 53, 164, 205, 152, 85, 241, 183, 115, 34, 73, 213, 10, 169, 221, 170, 255, 140, 138, 247, 163, 128, 195, 52, 118, 133, 38, 219, 201, 9, 216, 83, 149, 240, 161, 144, 67, 84, 3, 218, 121, 5, 175, 23, 214, 111, 242, 118, 3, 231, 147, 242, 182, 163, 57, 27, 59, 26, 106, 62, 203, 16, 68, 193, 29, 19, 115, 0, 0, 228, 254, 179, 173, 146, 197, 129, 184, 178, 5, 199, 196, 207, 101, 167, 172, 184, 161, 229, 93, 131, 60, 70, 160, 212, 236, 156, 100, 9, 141, 160, 33, 250, 188, 21, 225, 68, 163, 197, 77, 173, 232, 181, 188, 232, 51, 41, 115, 87, 71, 237, 216, 31, 181, 128, 240, 195, 31, 21, 45, 173, 145, 131, 127, 66, 97, 221, 82, 53, 252, 187, 55, 172, 205, 110, 199, 47, 89, 200, 238, 248, 32, 120, 199, 132, 220, 16, 135, 153, 220, 131, 230, 70, 59, 137, 115, 190, 79, 220, 226, 59, 149, 137, 22, 160, 104, 236, 239, 230, 223, 35, 17, 242, 12, 190, 143, 239, 202, 158, 104, 79, 145, 111, 160, 158, 33, 249, 165, 245, 117, 211, 26, 165, 92, 65, 85, 22, 127, 42, 89, 60, 198, 20, 222, 193, 63, 30, 18, 21, 217, 102, 86, 121, 253, 60, 234, 77, 203, 250, 6, 118, 199, 28, 218, 156, 36, 46, 102, 94, 4, 36, 214, 201, 192, 233, 117, 76, 96, 52, 13, 222, 48, 223, 117, 142, 228, 183, 63, 109, 221, 131, 72, 159, 39, 88, 153, 154, 173, 74, 91, 243, 225, 207, 111, 239, 104, 182, 148, 117, 95, 212, 84, 141, 44, 101, 34, 77, 151, 216, 15, 164, 121, 208, 159, 107, 213, 181, 51, 117, 52, 177, 23, 128, 76, 8, 245, 29, 250, 14, 186, 16, 155, 146, 187, 156, 5, 210, 39, 115, 229, 126, 220, 98, 149, 128, 200, 160, 125, 166, 37, 87, 31, 119, 0, 15, 26, 194, 247, 83, 59, 103, 47, 20, 146, 153, 118, 7, 88, 8, 96, 38, 243, 222, 86, 110, 112, 66, 70, 94, 121, 131, 180, 167, 132, 60, 250, 114, 163, 255, 196, 230, 238, 76, 216, 111, 82, 97, 192, 219, 14, 63, 82, 3, 201, 206, 41, 237, 1, 27, 13, 0, 167, 91, 130, 157, 249, 62, 180, 86, 243, 206, 37, 122, 238, 245, 39, 122, 38, 224, 133, 77, 166, 38, 195, 154, 174, 32, 85, 232, 87, 39, 243, 114, 22, 231, 6, 223, 99, 204, 202, 106, 122, 121, 38, 245, 108, 82, 84, 40, 225, 129, 108, 216, 202, 31, 66, 246, 59, 145, 202, 54, 121, 134, 180, 181, 79, 70, 238, 106, 245, 220, 25, 100, 170, 150, 47, 193, 229, 202, 49, 53, 16, 211, 110, 137, 28, 55, 80, 248, 52, 119, 155, 76, 98, 75, 1, 116, 239, 124, 178, 216, 11, 63, 198, 139, 35, 212, 44, 66, 220, 176, 150, 102, 3, 243, 236, 219, 135, 254, 209, 164, 3, 42, 6, 185, 143, 78, 13, 108, 166, 16, 30, 164, 58, 216, 65, 150, 197, 199, 115, 185, 99, 28, 67, 165, 132, 111, 187, 37, 30, 95, 171, 44, 4, 201, 130, 58, 225, 113, 127, 187, 169, 13, 3, 239, 5, 133, 57, 11, 255, 249, 244, 184, 109, 50, 181, 72, 49, 68, 188, 211, 202, 138, 226, 15, 156, 39, 211, 13, 251, 232, 132, 35, 33, 252, 93, 172, 3, 228, 40, 125, 220, 165, 158, 185, 166, 185, 5, 251, 221, 132, 97, 148, 46, 176, 226, 80, 21, 9, 0, 87, 228, 245, 226, 104, 39, 49, 191, 23, 55, 196, 201, 216, 3, 140, 149, 130, 22, 166, 221, 91, 104, 226, 18, 154, 26, 112, 63, 212, 117, 174, 121, 232, 40, 66, 243, 219, 156, 174, 107, 190, 135, 45, 232, 110, 102, 21, 119, 177, 79, 14, 236, 8, 217, 139, 52, 216, 75, 155, 243, 54, 88, 249, 162, 56, 6, 218, 212, 217, 56, 32, 253, 212, 194, 160, 118, 4, 77, 195, 166, 189, 201, 221, 95, 87, 136, 209, 79, 196, 165, 154, 171, 252, 5, 252, 232, 247, 117, 153, 113, 223, 82, 226, 181, 148, 95, 139, 136, 146, 227, 18, 76, 86, 133, 33, 65, 63, 255, 60, 111, 101, 228, 11, 57, 185, 149, 72, 210, 43, 249, 95, 76, 48, 113, 196, 26, 225, 86, 23, 174, 77, 162, 72, 170, 56, 25, 156, 148, 147, 251, 43, 157, 133, 189, 81, 10, 135, 251];

    struct BigStruct has copy, drop {
        inner: vector<u8>,
        inner2: vector<u8>,
        inner3: vector<u8>
    }

    public entry fun whatever(big_vector: vector<u8>) {
        // let _vec2 = big_vector;
        // let _vec3 = big_vector;
        // let _vec4 = copy big_vector;
        let i = 0;
        while (i < vector::length(&big_vector)) {
            i = i + 1;
        };
    }

    public fun deref(big_struct: &BigStruct) {
        let _new = *big_struct;
        let _new2 = *big_struct;
        let _new3 = *big_struct;
        let _new4 = *big_struct;
        let _new5 = *big_struct;
        let _new6 = *big_struct;
        let _new7 = *big_struct;
    }

    public fun copy_(big_struct: &BigStruct) {
        let _new = copy big_struct;
        let _new2 = copy big_struct;
        let _new3 = copy big_struct;
        let _new4 = copy big_struct;
        let _new5 = copy big_struct;
        let _new6 = copy big_struct;
        let _new7 = copy big_struct;
    }

    public fun new(input: vector<u8>): BigStruct {
        BigStruct {
            inner: input,
            inner2: input,
            inner3: input
        }
    }

    public entry fun test1() {
        let big_struct = new(BIG_VECTOR);
        deref(&big_struct);
    }

    public entry fun test2() {
        let big_struct = new(BIG_VECTOR);
        copy_(&big_struct);
    }
}

#[test_only]
module sui_playground::copy_benchmark_test {
    // use std::vector;

    use sui::test_scenario;

    use sui_playground::copy_benchmark;

    // 1 KB
    const BIG_VECTOR: vector<u8> = vector[133, 89, 189, 181, 118, 33, 78, 167, 37, 215, 82, 28, 23, 114, 79, 114, 169, 182, 173, 100, 111, 168, 252, 191, 119, 192, 1, 238, 246, 230, 143, 157, 128, 105, 69, 68, 207, 135, 84, 69, 173, 58, 72, 70, 144, 83, 255, 1, 93, 227, 235, 73, 63, 115, 70, 125, 36, 71, 248, 251, 61, 10, 129, 23, 90, 166, 32, 167, 148, 129, 239, 70, 19, 238, 169, 183, 10, 209, 190, 141, 234, 184, 16, 70, 169, 97, 42, 82, 244, 208, 8, 249, 127, 46, 241, 70, 184, 146, 21, 128, 101, 124, 105, 20, 70, 245, 208, 162, 140, 131, 5, 108, 71, 13, 206, 250, 13, 245, 210, 117, 59, 19, 183, 68, 224, 14, 102, 60, 10, 190, 124, 3, 200, 120, 84, 232, 30, 34, 50, 145, 230, 42, 186, 212, 23, 107, 109, 242, 255, 126, 161, 152, 219, 100, 169, 193, 31, 162, 190, 137, 45, 83, 46, 232, 3, 194, 123, 33, 65, 167, 2, 210, 204, 35, 196, 41, 189, 103, 30, 134, 104, 52, 22, 158, 148, 84, 86, 27, 219, 252, 128, 115, 155, 188, 38, 159, 214, 215, 181, 240, 126, 75, 205, 117, 36, 162, 92, 2, 162, 76, 37, 244, 198, 137, 137, 230, 192, 86, 234, 180, 146, 173, 131, 38, 147, 250, 29, 107, 181, 229, 77, 218, 216, 155, 53, 164, 205, 152, 85, 241, 183, 115, 34, 73, 213, 10, 169, 221, 170, 255, 140, 138, 247, 163, 128, 195, 52, 118, 133, 38, 219, 201, 9, 216, 83, 149, 240, 161, 144, 67, 84, 3, 218, 121, 5, 175, 23, 214, 111, 242, 118, 3, 231, 147, 242, 182, 163, 57, 27, 59, 26, 106, 62, 203, 16, 68, 193, 29, 19, 115, 0, 0, 228, 254, 179, 173, 146, 197, 129, 184, 178, 5, 199, 196, 207, 101, 167, 172, 184, 161, 229, 93, 131, 60, 70, 160, 212, 236, 156, 100, 9, 141, 160, 33, 250, 188, 21, 225, 68, 163, 197, 77, 173, 232, 181, 188, 232, 51, 41, 115, 87, 71, 237, 216, 31, 181, 128, 240, 195, 31, 21, 45, 173, 145, 131, 127, 66, 97, 221, 82, 53, 252, 187, 55, 172, 205, 110, 199, 47, 89, 200, 238, 248, 32, 120, 199, 132, 220, 16, 135, 153, 220, 131, 230, 70, 59, 137, 115, 190, 79, 220, 226, 59, 149, 137, 22, 160, 104, 236, 239, 230, 223, 35, 17, 242, 12, 190, 143, 239, 202, 158, 104, 79, 145, 111, 160, 158, 33, 249, 165, 245, 117, 211, 26, 165, 92, 65, 85, 22, 127, 42, 89, 60, 198, 20, 222, 193, 63, 30, 18, 21, 217, 102, 86, 121, 253, 60, 234, 77, 203, 250, 6, 118, 199, 28, 218, 156, 36, 46, 102, 94, 4, 36, 214, 201, 192, 233, 117, 76, 96, 52, 13, 222, 48, 223, 117, 142, 228, 183, 63, 109, 221, 131, 72, 159, 39, 88, 153, 154, 173, 74, 91, 243, 225, 207, 111, 239, 104, 182, 148, 117, 95, 212, 84, 141, 44, 101, 34, 77, 151, 216, 15, 164, 121, 208, 159, 107, 213, 181, 51, 117, 52, 177, 23, 128, 76, 8, 245, 29, 250, 14, 186, 16, 155, 146, 187, 156, 5, 210, 39, 115, 229, 126, 220, 98, 149, 128, 200, 160, 125, 166, 37, 87, 31, 119, 0, 15, 26, 194, 247, 83, 59, 103, 47, 20, 146, 153, 118, 7, 88, 8, 96, 38, 243, 222, 86, 110, 112, 66, 70, 94, 121, 131, 180, 167, 132, 60, 250, 114, 163, 255, 196, 230, 238, 76, 216, 111, 82, 97, 192, 219, 14, 63, 82, 3, 201, 206, 41, 237, 1, 27, 13, 0, 167, 91, 130, 157, 249, 62, 180, 86, 243, 206, 37, 122, 238, 245, 39, 122, 38, 224, 133, 77, 166, 38, 195, 154, 174, 32, 85, 232, 87, 39, 243, 114, 22, 231, 6, 223, 99, 204, 202, 106, 122, 121, 38, 245, 108, 82, 84, 40, 225, 129, 108, 216, 202, 31, 66, 246, 59, 145, 202, 54, 121, 134, 180, 181, 79, 70, 238, 106, 245, 220, 25, 100, 170, 150, 47, 193, 229, 202, 49, 53, 16, 211, 110, 137, 28, 55, 80, 248, 52, 119, 155, 76, 98, 75, 1, 116, 239, 124, 178, 216, 11, 63, 198, 139, 35, 212, 44, 66, 220, 176, 150, 102, 3, 243, 236, 219, 135, 254, 209, 164, 3, 42, 6, 185, 143, 78, 13, 108, 166, 16, 30, 164, 58, 216, 65, 150, 197, 199, 115, 185, 99, 28, 67, 165, 132, 111, 187, 37, 30, 95, 171, 44, 4, 201, 130, 58, 225, 113, 127, 187, 169, 13, 3, 239, 5, 133, 57, 11, 255, 249, 244, 184, 109, 50, 181, 72, 49, 68, 188, 211, 202, 138, 226, 15, 156, 39, 211, 13, 251, 232, 132, 35, 33, 252, 93, 172, 3, 228, 40, 125, 220, 165, 158, 185, 166, 185, 5, 251, 221, 132, 97, 148, 46, 176, 226, 80, 21, 9, 0, 87, 228, 245, 226, 104, 39, 49, 191, 23, 55, 196, 201, 216, 3, 140, 149, 130, 22, 166, 221, 91, 104, 226, 18, 154, 26, 112, 63, 212, 117, 174, 121, 232, 40, 66, 243, 219, 156, 174, 107, 190, 135, 45, 232, 110, 102, 21, 119, 177, 79, 14, 236, 8, 217, 139, 52, 216, 75, 155, 243, 54, 88, 249, 162, 56, 6, 218, 212, 217, 56, 32, 253, 212, 194, 160, 118, 4, 77, 195, 166, 189, 201, 221, 95, 87, 136, 209, 79, 196, 165, 154, 171, 252, 5, 252, 232, 247, 117, 153, 113, 223, 82, 226, 181, 148, 95, 139, 136, 146, 227, 18, 76, 86, 133, 33, 65, 63, 255, 60, 111, 101, 228, 11, 57, 185, 149, 72, 210, 43, 249, 95, 76, 48, 113, 196, 26, 225, 86, 23, 174, 77, 162, 72, 170, 56, 25, 156, 148, 147, 251, 43, 157, 133, 189, 81, 10, 135, 251];

    #[test]
    public fun test() {
        let scenario = test_scenario::begin(@0x123);
        {
            copy_benchmark::whatever(BIG_VECTOR);
        };
        test_scenario::end(scenario);
    }

    #[test]
    public fun test2() {
        let scenario = test_scenario::begin(@0x123);
        {
            let big_struct = copy_benchmark::new(BIG_VECTOR);
            copy_benchmark::deref(&big_struct);
        };
        test_scenario::end(scenario);
    }
}